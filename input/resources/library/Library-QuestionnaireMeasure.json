{
  "resourceType": "Library",
  "id": "QuestionnaireMeasure",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://somewhere.org/fhir/uv/mycontentig/Library/QuestionnaireMeasure",
  "version": "0.1.0",
  "name": "QuestionnaireMeasure",
  "title": "Measure calculating scores from multiple questionnaires example",
  "status": "draft",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "subjectCodeableConcept": {
    "coding": [ {
      "system": "hl7.org/fhir/resource-types",
      "code": "Patient"
    } ]
  },
  "description": "Example library illustrating basic CQL constructs",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://somewhere.org/fhir/uv/mycontentig/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library PHQ9Logic",
    "resource": "http://somewhere.org/fhir/uv/mycontentig/Library/PHQ9Logic"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Initial Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Measure Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSBRdWVzdGlvbm5haXJlTWVhc3VyZQ0KDQp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJw0KDQppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJw0KDQppbmNsdWRlIFBIUTlMb2dpYw0KDQpwYXJhbWV0ZXIgIk1lYXN1cmVtZW50IFBlcmlvZCIgSW50ZXJ2YWw8RGF0ZT4gZGVmYXVsdCBJbnRlcnZhbFtAMjAyMS0wMS0wMSwgQDIwMjEtMTItMzFdDQoNCmNvbnRleHQgUGF0aWVudA0KDQpkZWZpbmUgIkluaXRpYWwgUG9wdWxhdGlvbiI6DQogIEFnZUluWWVhcnNBdChzdGFydCBvZiAiTWVhc3VyZW1lbnQgUGVyaW9kIikgPj0gMTgNCg0KLy8gTGlrZWx5IHNvbWUgY29uZGl0aW9uIG9yIG90aGVyIHJlbGV2YW50IGNoYXJhY3RlcmlzdGljIHN1Y2ggYXMgYSBkZXByZXNzaW9uIGRpYWdub3Npcw0KZGVmaW5lICJNZWFzdXJlIFBvcHVsYXRpb24iOg0KICB0cnVlDQoNCi8qDQpNZWFzdXJlIG9ic2VydmF0aW9uIGlzIGEgZnVuY3Rpb24gZGVmaW5lZCBpbiB0ZXJtcyBvZiB0aGUgdHlwZXMgb2YgbWVtYmVycyBvZiB0aGUgbWVhc3VyZQ0KcG9wdWxhdGlvbiwgUGF0aWVudCBpbiB0aGlzIGNhc2UuIEluIGEgcG9wdWxhdGlvbiBldmFsdWF0aW9uIHNjZW5hcmlvLCB0aGUgbWVhc3VyZQ0Kb2JzZXJ2YXRpb24gaXMgZXZhbHVhdGVkIGZvciBldmVyeSBtZW1iZXIgb2YgdGhlIHBvcHVsYXRpb24uDQoNCkluIGFuIGluZGl2aWR1YWwgcmVwb3J0IHNjZW5hcmlvLCBob3dldmVyLCB0aGUgbWVhc3VyZSBvYnNlcnZhdGlvbiBpcyBldmFsdWF0ZWQgZm9yDQp0aGUgY3VycmVudCBwYXRpZW50LiBOb3RlIHRoYXQgdGhlIHBhdGllbnQgY29udGV4dCBpcyBmbG93aW5nIHRocm91Z2ggdGhlIGNhbGwgaGVyZQ0KKi8NCmRlZmluZSBmdW5jdGlvbiAiTWVhc3VyZU9ic2VydmF0aW9uIihwYXRpZW50IFBhdGllbnQpOg0KICBQSFE5TG9naWMuQ2FsY3VsYXRlVG90YWxTY29yZQ0K"
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}